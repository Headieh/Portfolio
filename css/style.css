/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body,html{height:100%}#page-content{flex:1 0 auto;padding:0}.nav-link i{padding:0;margin:0}.footer{flex-shrink:0}.main{padding:0;margin:0}body{font-family:Montserrat;font-weight:lighter}body,img{height:100%}img{width:100%;padding:1rem;margin:1rem;max-width:18rem}.imgcontainer{margin:auto;text-align:center;padding:0}.card-body{background-color:#f0f0f0}.card .project{padding:0;margin:1em;background-color:#fff;border-radius:20px;height:95%}.card .project>h2{border-radius:20px 20px 0 0;background-image:linear-gradient(to bottom right,#30475e,#000);text-align:center;color:#ffcb74}.carousel-control-next-icon,.carousel-control-prev-icon{-webkit-filter:invert(1);filter:invert(1)}.carousel-control-prev-icon{margin-left:-.5em;margin-top:auto}.carousel-control-next-icon{margin-right:-.5em;margin-top:auto}.carousel{margin:1em;overflow:hidden}.carousel,.carousel-item h5,.carousel-item p{text-align:center}.carousel-item>img{-o-object-fit:contain;object-fit:contain;height:18.75rem;width:100%;margin:auto}h6{text-align:center;padding:.5rem}p{padding:1em;margin:1em}.education>article>p{padding:0;margin:0}article{padding:1em}.navbar,.navbar>.nav-item{display:block;list-style-type:none;vertical-align:text-top}.tech,.tech>li{display:block}.modal{background-image:linear-gradient(to bottom right,#fff,#000);background-repeat:no-repeat;background-size:cover}.card{border-style:none}#page-content a,#page-content i{color:#120d7f;padding:.75rem;text-align:left}#page-content a:hover,#page-content i:hover{color:#2b22e9}#page-content i:active,#page-content i:hover{transform:rotate(1turn);transition:transform 1s}form{margin:auto;width:80%}p:first-of-type{font-weight:bolder;margin-top:1em}nav{font-family:Cinzel}.card-header{background-image:linear-gradient(to bottom right,#d3d3d3,#30475e)}.card-header h2>button{color:#000;font-size:2rem;font-weight:bolder}.btn-link:hover{color:#000;text-shadow:1px 1px}.modal-title{width:100%}button,input,textarea{background-color:#fafafa;border-width:thin;border-style:solid;border-bottom:thin solid #4d4d4d}.close{text-align:right}button,input,label,select,textarea{font-family:inherit;font-size:100%;box-sizing:border-box;color:#000;padding:.5em;display:block;text-align:left;width:100%;margin:auto}input[type=submit]{width:50%;color:#fff;text-align:center;background-color:#cb326d}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
